import streamlit as st
import pandas as pd
from datetime import datetime
import json

# Configuration de la page
st.set_page_config(
    page_title="√âligibilit√© IFS Food v8",
    page_icon="‚úÖ",
    layout="wide"
)

# Styles CSS personnalis√©s
st.markdown("""
<style>
    .big-font {
        font-size:20px !important;
        font-weight: bold;
    }
    .success-box {
        padding: 20px;
        border-radius: 5px;
        background-color: #d4edda;
        border: 1px solid #c3e6cb;
    }
    .warning-box {
        padding: 20px;
        border-radius: 5px;
        background-color: #fff3cd;
        border: 1px solid #ffc107;
    }
    .danger-box {
        padding: 20px;
        border-radius: 5px;
        background-color: #f8d7da;
        border: 1px solid #f5c6cb;
    }
</style>
""", unsafe_allow_html=True)

# Initialisation de l'√©tat de session
if 'etape' not in st.session_state:
    st.session_state.etape = 1
if 'reponses' not in st.session_state:
    st.session_state.reponses = {}

# Titre principal
st.title("üéØ Outil d'√âligibilit√© IFS Food Version 8")
st.markdown("*√âvaluez rapidement si votre entreprise est pr√™te pour la certification IFS Food v8*")
st.markdown("---")

# D√©finition des questions par cat√©gorie
QUESTIONS = {
    "informations": {
        "titre": "üìã Informations G√©n√©rales",
        "questions": [
            {
                "id": "nom_entreprise",
                "question": "Nom de l'entreprise",
                "type": "text",
                "obligatoire": True
            },
            {
                "id": "activite",
                "question": "Type d'activit√©",
                "type": "select",
                "options": ["Transformation de produits alimentaires", "Conditionnement de produits nus", "Production de produits combin√©s", "Autre"],
                "obligatoire": True
            },
            {
                "id": "nb_employes",
                "question": "Nombre d'employ√©s",
                "type": "number",
                "obligatoire": True
            },
            {
                "id": "production_annee",
                "question": "Depuis combien de temps l'entreprise est-elle en production ?",
                "type": "select",
                "options": ["Moins de 3 mois", "3-6 mois", "6-12 mois", "Plus d'un an"],
                "points": [0, 5, 10, 15],
                "obligatoire": True
            }
        ]
    },
    "prerequis_ko": {
        "titre": "‚ö†Ô∏è Pr√©requis Essentiels (Exigences KO)",
        "description": "Ces √©l√©ments sont **OBLIGATOIRES** pour la certification IFS Food",
        "questions": [
            {
                "id": "ko_1",
                "question": "Avez-vous un responsable qualit√©/s√©curit√© alimentaire identifi√© avec des responsabilit√©s document√©es ?",
                "reference": "KO n¬∞1 - 1.2.1",
                "type": "radio",
                "options": ["Oui", "Non"],
                "points": [100, 0],
                "ko": True
            },
            {
                "id": "ko_2",
                "question": "Disposez-vous d'un syst√®me de surveillance document√© pour chaque CCP (Point Critique de Contr√¥le) ?",
                "reference": "KO n¬∞2 - 2.3.9.1",
                "type": "radio",
                "options": ["Oui, tous les CCP sont surveill√©s", "Partiellement", "Non", "Nous n'avons pas de CCP identifi√©s"],
                "points": [100, 30, 0, 0],
                "ko": True
            },
            {
                "id": "ko_3",
                "question": "Avez-vous des exigences d'hygi√®ne personnelle document√©es et appliqu√©es par tous ?",
                "reference": "KO n¬∞3 - 3.2.2",
                "type": "radio",
                "options": ["Oui", "Partiellement", "Non"],
                "points": [100, 40, 0],
                "ko": True
            },
            {
                "id": "ko_4",
                "question": "Les accords avec les clients (recettes, proc√©d√©s, conditionnement) sont-ils respect√©s ?",
                "reference": "KO n¬∞4 - 4.1.3",
                "type": "radio",
                "options": ["Oui, syst√©matiquement", "La plupart du temps", "Non applicable - pas d'accords clients", "Non"],
                "points": [100, 50, 100, 0],
                "ko": True
            },
            {
                "id": "ko_5",
                "question": "Disposez-vous de sp√©cifications document√©es pour toutes vos mati√®res premi√®res ?",
                "reference": "KO n¬∞5 - 4.2.1.3",
                "type": "radio",
                "options": ["Oui, pour toutes", "Pour la majorit√©", "Pour quelques-unes", "Non"],
                "points": [100, 50, 20, 0],
                "ko": True
            },
            {
                "id": "ko_6",
                "question": "Avez-vous des proc√©dures pour emp√™cher la contamination par des corps √©trangers ?",
                "reference": "KO n¬∞6 - 4.12.1",
                "type": "radio",
                "options": ["Oui, document√©es et appliqu√©es", "Oui, mais non document√©es", "Partiellement", "Non"],
                "points": [100, 40, 20, 0],
                "ko": True
            },
            {
                "id": "ko_7",
                "question": "Avez-vous un syst√®me de tra√ßabilit√© document√© (du fournisseur au client) ?",
                "reference": "KO n¬∞7 - 4.18.1",
                "type": "radio",
                "options": ["Oui, complet et test√©", "Oui, mais non test√©", "Partiellement", "Non"],
                "points": [100, 60, 20, 0],
                "ko": True
            },
            {
                "id": "ko_8",
                "question": "R√©alisez-vous des audits internes couvrant toutes les exigences IFS au moins une fois par an ?",
                "reference": "KO n¬∞8 - 5.1.1",
                "type": "radio",
                "options": ["Oui, r√©guli√®rement", "Occasionnellement", "Non, jamais"],
                "points": [100, 30, 0],
                "ko": True
            },
            {
                "id": "ko_9",
                "question": "Avez-vous une proc√©dure document√©e pour g√©rer les rappels et retraits de produits ?",
                "reference": "KO n¬∞9 - 5.9.1",
                "type": "radio",
                "options": ["Oui, document√©e et test√©e", "Oui, mais non test√©e", "Non"],
                "points": [100, 50, 0],
                "ko": True
            },
            {
                "id": "ko_10",
                "question": "Mettez-vous en place des actions correctives pour √©viter la r√©apparition des non-conformit√©s ?",
                "reference": "KO n¬∞10 - 5.11.3",
                "type": "radio",
                "options": ["Oui, syst√©matiquement", "Parfois", "Non"],
                "points": [100, 40, 0],
                "ko": True
            }
        ]
    },
    "systeme_qualite": {
        "titre": "üìä Syst√®me de Management Qualit√©",
        "questions": [
            {
                "id": "politique_qualite",
                "question": "Disposez-vous d'une politique qualit√© et s√©curit√© alimentaire document√©e ?",
                "reference": "1.1.1",
                "type": "radio",
                "options": ["Oui, communiqu√©e √† tous", "Oui, mais non communiqu√©e", "Non"],
                "points": [20, 10, 0]
            },
            {
                "id": "revue_direction",
                "question": "R√©alisez-vous une revue de direction au moins une fois par an ?",
                "reference": "1.3.1",
                "type": "radio",
                "options": ["Oui, r√©guli√®rement", "Occasionnellement", "Non"],
                "points": [20, 10, 0]
            },
            {
                "id": "haccp",
                "question": "Avez-vous un plan HACCP complet et document√© ?",
                "reference": "2.2.1.1",
                "type": "radio",
                "options": ["Oui, conforme Codex Alimentarius", "Oui, mais incomplet", "En cours d'√©laboration", "Non"],
                "points": [30, 15, 5, 0]
            },
            {
                "id": "gestion_doc",
                "question": "Avez-vous un syst√®me de gestion documentaire (proc√©dures, enregistrements) ?",
                "reference": "2.1.1",
                "type": "radio",
                "options": ["Oui, syst√®me complet", "Partiellement", "Non"],
                "points": [15, 8, 0]
            },
            {
                "id": "reclamations",
                "question": "Avez-vous une proc√©dure de gestion des r√©clamations clients ?",
                "reference": "5.8.1",
                "type": "radio",
                "options": ["Oui, document√©e et appliqu√©e", "Oui, mais informelle", "Non"],
                "points": [15, 7, 0]
            }
        ]
    },
    "ressources": {
        "titre": "üë• Ressources et Comp√©tences",
        "questions": [
            {
                "id": "formation",
                "question": "Disposez-vous d'un programme de formation document√© pour le personnel ?",
                "reference": "3.3.1",
                "type": "radio",
                "options": ["Oui, avec plan annuel", "Oui, mais informel", "Non"],
                "points": [20, 10, 0]
            },
            {
                "id": "formation_haccp",
                "question": "Votre personnel cl√© a-t-il √©t√© form√© √† l'HACCP ?",
                "reference": "2.3.1.2",
                "type": "radio",
                "options": ["Oui, formation externe certifi√©e", "Oui, formation interne", "Non"],
                "points": [15, 10, 0]
            },
            {
                "id": "installations",
                "question": "Vos installations sont-elles adapt√©es √† la production alimentaire (locaux, √©quipements) ?",
                "reference": "4.9.1.1",
                "type": "radio",
                "options": ["Oui, conformes", "Partiellement conformes", "Non conformes"],
                "points": [20, 10, 0]
            },
            {
                "id": "nettoyage",
                "question": "Avez-vous un plan de nettoyage et d√©sinfection document√© ?",
                "reference": "4.10.1",
                "type": "radio",
                "options": ["Oui, document√© et valid√©", "Oui, mais non valid√©", "Non"],
                "points": [15, 8, 0]
            }
        ]
    },
    "controles": {
        "titre": "üî¨ Contr√¥les et Analyses",
        "questions": [
            {
                "id": "analyses",
                "question": "R√©alisez-vous des analyses de produits (internes ou externes) ?",
                "reference": "5.6.1",
                "type": "radio",
                "options": ["Oui, plan d'analyses complet", "Oui, analyses ponctuelles", "Non"],
                "points": [20, 10, 0]
            },
            {
                "id": "maitrise_quantite",
                "question": "Avez-vous un syst√®me de ma√Ætrise des quantit√©s ?",
                "reference": "5.5.1",
                "type": "radio",
                "options": ["Oui", "Partiellement", "Non"],
                "points": [15, 8, 0]
            },
            {
                "id": "etalonnage",
                "question": "Vos appareils de mesure sont-ils √©talonn√©s r√©guli√®rement ?",
                "reference": "5.4.2",
                "type": "radio",
                "options": ["Oui, programme d'√©talonnage", "Occasionnellement", "Non"],
                "points": [15, 5, 0]
            },
            {
                "id": "produits_nc",
                "question": "Avez-vous une proc√©dure pour g√©rer les produits non conformes ?",
                "reference": "5.10.1",
                "type": "radio",
                "options": ["Oui, document√©e", "Oui, mais informelle", "Non"],
                "points": [15, 7, 0]
            }
        ]
    }
}

def calculer_score(reponses):
    """Calcule le score total et par cat√©gorie"""
    score_total = 0
    score_max = 0
    scores_categories = {}
    ko_manquants = []
    
    for categorie, data in QUESTIONS.items():
        if categorie == "informations":
            continue
            
        score_cat = 0
        max_cat = 0
        
        for q in data["questions"]:
            if q["type"] in ["radio", "select"] and "points" in q:
                max_points = max(q["points"])
                max_cat += max_points
                
                if q["id"] in reponses:
                    idx = q["options"].index(reponses[q["id"]])
                    points = q["points"][idx]
                    score_cat += points
                    
                    # V√©rifier les KO
                    if q.get("ko", False) and points < 100:
                        ko_manquants.append({
                            "question": q["question"],
                            "reference": q.get("reference", ""),
                            "reponse": reponses[q["id"]]
                        })
        
        if max_cat > 0:
            scores_categories[categorie] = {
                "score": score_cat,
                "max": max_cat,
                "pourcentage": (score_cat / max_cat) * 100
            }
            score_total += score_cat
            score_max += max_cat
    
    pourcentage_total = (score_total / score_max * 100) if score_max > 0 else 0
    
    return {
        "score": score_total,
        "max": score_max,
        "pourcentage": pourcentage_total,
        "categories": scores_categories,
        "ko_manquants": ko_manquants
    }

def determiner_eligibilite(resultats):
    """D√©termine l'√©ligibilit√© bas√©e sur le score"""
    pourcentage = resultats["pourcentage"]
    ko_manquants = len(resultats["ko_manquants"])
    
    if ko_manquants > 0:
        return {
            "statut": "NON_ELIGIBLE",
            "niveau": "‚ùå NON √âLIGIBLE",
            "couleur": "danger",
            "message": f"**{ko_manquants} exigence(s) KO manquante(s)**. Ces pr√©requis essentiels sont OBLIGATOIRES pour la certification IFS Food."
        }
    elif pourcentage >= 90:
        return {
            "statut": "ELIGIBLE",
            "niveau": "‚úÖ √âLIGIBLE",
            "couleur": "success",
            "message": "Votre entreprise semble pr√™te pour entamer le processus de certification IFS Food v8."
        }
    elif pourcentage >= 75:
        return {
            "statut": "ELIGIBLE_RESERVE",
            "niveau": "‚ö†Ô∏è √âLIGIBLE AVEC R√âSERVES",
            "couleur": "warning",
            "message": "Votre entreprise a les bases n√©cessaires, mais des am√©liorations sont recommand√©es avant l'audit."
        }
    elif pourcentage >= 50:
        return {
            "statut": "AMELIORATIONS_REQUISES",
            "niveau": "‚ö†Ô∏è AM√âLIORATIONS IMPORTANTES REQUISES",
            "couleur": "warning",
            "message": "Une mise √† niveau significative de votre syst√®me qualit√© est n√©cessaire avant de pouvoir envisager la certification."
        }
    else:
        return {
            "statut": "NON_ELIGIBLE",
            "niveau": "‚ùå NON √âLIGIBLE",
            "couleur": "danger",
            "message": "Les pr√©requis fondamentaux ne sont pas en place. Un accompagnement est fortement recommand√©."
        }

def afficher_question(question, categorie_id):
    """Affiche une question selon son type"""
    key = f"{categorie_id}_{question['id']}"
    
    # Affichage de la question avec r√©f√©rence
    st.markdown(f"**{question['question']}**")
    if "reference" in question:
        st.caption(f"üìñ R√©f√©rence IFS: {question['reference']}")
    
    # Gestion selon le type de question
    if question["type"] == "text":
        valeur = st.text_input("", key=key, label_visibility="collapsed")
    elif question["type"] == "number":
        valeur = st.number_input("", min_value=0, key=key, label_visibility="collapsed")
    elif question["type"] == "select":
        valeur = st.selectbox("", question["options"], key=key, label_visibility="collapsed")
    elif question["type"] == "radio":
        valeur = st.radio("", question["options"], key=key, label_visibility="collapsed")
    else:
        valeur = None
    
    if valeur:
        st.session_state.reponses[question["id"]] = valeur
    
    st.markdown("---")

def afficher_resultats(resultats, eligibilite, reponses):
    """Affiche les r√©sultats de l'√©valuation"""
    st.markdown("## üìä R√©sultats de l'√âvaluation")
    
    # Informations entreprise
    with st.expander("‚ÑπÔ∏è Informations de l'entreprise", expanded=False):
        col1, col2 = st.columns(2)
        with col1:
            st.write(f"**Entreprise:** {reponses.get('nom_entreprise', 'N/A')}")
            st.write(f"**Activit√©:** {reponses.get('activite', 'N/A')}")
        with col2:
            st.write(f"**Nombre d'employ√©s:** {reponses.get('nb_employes', 'N/A')}")
            st.write(f"**Dur√©e de production:** {reponses.get('production_annee', 'N/A')}")
    
    st.markdown("---")
    
    # R√©sultat principal
    st.markdown(f"""
    <div class='{eligibilite["couleur"]}-box'>
        <h2 style='margin:0;'>{eligibilite["niveau"]}</h2>
        <p style='font-size:24px; margin:10px 0;'><strong>Score: {resultats['pourcentage']:.1f}%</strong> ({resultats['score']}/{resultats['max']} points)</p>
        <p style='margin:0;'>{eligibilite["message"]}</p>
    </div>
    """, unsafe_allow_html=True)
    
    st.markdown("---")
    
    # Exigences KO manquantes
    if resultats["ko_manquants"]:
        st.markdown("### üö® Exigences KO Manquantes (CRITIQUE)")
        st.error("Les exigences suivantes sont **OBLIGATOIRES** et doivent √™tre mises en place avant la certification:")
        
        for i, ko in enumerate(resultats["ko_manquants"], 1):
            st.markdown(f"""
            **{i}. {ko['question']}**  
            üìñ *R√©f√©rence: {ko['reference']}*  
            ‚û°Ô∏è Votre r√©ponse: *{ko['reponse']}*
            """)
            st.markdown("---")
    
    # Scores par cat√©gorie
    st.markdown("### üìà D√©tail par Cat√©gorie")
    
    for cat_id, cat_data in resultats["categories"].items():
        cat_info = QUESTIONS[cat_id]
        pourcentage = cat_data["pourcentage"]
        
        # Couleur selon le score
        if pourcentage >= 80:
            couleur = "üü¢"
        elif pourcentage >= 50:
            couleur = "üü°"
        else:
            couleur = "üî¥"
        
        col1, col2 = st.columns([3, 1])
        with col1:
            st.markdown(f"{couleur} **{cat_info['titre']}**")
        with col2:
            st.markdown(f"**{pourcentage:.0f}%**")
        
        st.progress(pourcentage / 100)
        st.caption(f"{cat_data['score']}/{cat_data['max']} points")
        st.markdown("")
    
    # Recommandations
    st.markdown("---")
    st.markdown("### üí° Recommandations")
    
    if eligibilite["statut"] == "ELIGIBLE":
        st.success("""
        **Prochaines √©tapes recommand√©es:**
        1. ‚úÖ Contactez notre organisme pour planifier l'audit initial
        2. ‚úÖ Pr√©parez la documentation demand√©e
        3. ‚úÖ D√©signez un interlocuteur d√©di√©
        4. ‚úÖ Planifiez l'audit (d√©lai recommand√©: 2-3 mois)
        """)
    
    elif eligibilite["statut"] == "ELIGIBLE_RESERVE":
        st.warning("""
        **Actions recommand√©es avant l'audit:**
        1. ‚ö†Ô∏è Renforcez les points faibles identifi√©s
        2. ‚ö†Ô∏è Compl√©tez la documentation manquante
        3. ‚ö†Ô∏è Envisagez un pr√©-audit (optionnel)
        4. ‚ö†Ô∏è Formez votre √©quipe aux exigences IFS
        5. ‚ö†Ô∏è D√©lai recommand√© avant audit: 3-6 mois
        """)
    
    else:
        st.error("""
        **Plan d'action recommand√©:**
        1. ‚ùå Mise en place des pr√©requis essentiels (exigences KO)
        2. ‚ùå D√©veloppement du syst√®me de management qualit√©
        3. ‚ùå Formation de l'√©quipe
        4. ‚ùå Accompagnement par un consultant IFS (fortement recommand√©)
        5. ‚ùå D√©lai minimum avant certification: 6-12 mois
        """)
    
    # Bouton de t√©l√©chargement du rapport
    st.markdown("---")
    
    rapport_json = {
        "date_evaluation": datetime.now().strftime("%Y-%m-%d %H:%M"),
        "entreprise": reponses.get("nom_entreprise", "N/A"),
        "resultats": {
            "score_total": f"{resultats['pourcentage']:.1f}%",
            "eligibilite": eligibilite["niveau"],
            "statut": eligibilite["statut"]
        },
        "categories": {
            cat_id: {
                "titre": QUESTIONS[cat_id]["titre"],
                "score": f"{data['pourcentage']:.0f}%"
            }
            for cat_id, data in resultats["categories"].items()
        },
        "ko_manquants": resultats["ko_manquants"]
    }
    
    st.download_button(
        label="üì• T√©l√©charger le rapport (JSON)",
        data=json.dumps(rapport_json, indent=2, ensure_ascii=False),
        file_name=f"evaluation_ifs_{reponses.get('nom_entreprise', 'entreprise').replace(' ', '_')}_{datetime.now().strftime('%Y%m%d')}.json",
        mime="application/json"
    )

# ========== INTERFACE PRINCIPALE ==========

# Barre de progression
categories_list = list(QUESTIONS.keys())
total_etapes = len(categories_list) + 1  # +1 pour la page de r√©sultats

# V√©rifier que l'√©tape est valide
if st.session_state.etape > total_etapes:
    st.session_state.etape = total_etapes
if st.session_state.etape < 1:
    st.session_state.etape = 1

progress = (st.session_state.etape - 1) / (total_etapes - 1) if total_etapes > 1 else 0
st.progress(progress)
st.caption(f"√âtape {st.session_state.etape}/{total_etapes}")

# Navigation
if st.session_state.etape <= len(categories_list):
    # Pages de questionnaire
    categorie_actuelle = categories_list[st.session_state.etape - 1]
    cat_data = QUESTIONS[categorie_actuelle]
    
    st.markdown(f"## {cat_data['titre']}")
    
    if "description" in cat_data:
        st.info(cat_data["description"])
    
    st.markdown("---")
    
    # Affichage des questions
    for question in cat_data["questions"]:
        afficher_question(question, categorie_actuelle)
    
    # Boutons de navigation
    col1, col2, col3 = st.columns([1, 1, 1])
    
    with col1:
        if st.session_state.etape > 1:
            if st.button("‚¨ÖÔ∏è Pr√©c√©dent"):
                st.session_state.etape -= 1
                st.rerun()
    
    with col3:
        if st.session_state.etape < len(categories_list):
            if st.button("Suivant ‚û°Ô∏è"):
                st.session_state.etape += 1
                st.rerun()
        else:
            if st.button("üéØ Voir les r√©sultats"):
                st.session_state.etape += 1
                st.rerun()

else:
    # Page de r√©sultats
    resultats = calculer_score(st.session_state.reponses)
    eligibilite = determiner_eligibilite(resultats)
    afficher_resultats(resultats, eligibilite, st.session_state.reponses)
    
    st.markdown("---")
    
    col1, col2 = st.columns([1, 1])
    with col1:
        if st.button("‚¨ÖÔ∏è Retour au questionnaire"):
            st.session_state.etape = len(categories_list)
            st.rerun()
    
    with col2:
        if st.button("üîÑ Nouvelle √©valuation"):
            st.session_state.etape = 1
            st.session_state.reponses = {}
            st.rerun()

# Footer
st.markdown("---")
st.caption("üîí Cet outil est fourni √† titre indicatif. Une √©valuation compl√®te sera r√©alis√©e lors de l'audit officiel.")
st.caption("üìß Contact: contact@votre-organisme.fr | üìû 01 23 45 67 89")
